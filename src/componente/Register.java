/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package componente;

import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * Franchis
 */
public class Register extends javax.swing.JFrame {

    private UserDatabase userDatabase;

    // Constructor de la clase del registro que recibe una instancia de la base de datos
    public Register(UserDatabase userDatabase) {
        this.userDatabase = userDatabase;
        this.userDatabase.loadUsers(); // Carga los usuarios existentes desde el archivo
        initComponents();
    }

    private boolean validarUserName(String userName) {
        // Verifica si el nombre de usuario cumple con ciertos criterios de complejidad
        // Requiere al menos una letra minúscula, una letra mayúscula y un carácter especial específico
        String regex = "^(?=.*[a-zA-Z])(?=.*[A-Z])(?=.*[!@#$%^&*()\\-_=+{};:,<.>]).+$";
        return userName.matches(regex); // Devuelve true si cumple con la expresión regular, false si no
    }
    
    private boolean validarPassword(String passwordUser) {
        // Verifica si la contraseña cumple con los mismos criterios de complejidad que el nombre de usuario
        String regex = "^(?=.*[a-zA-Z])(?=.*[A-Z])(?=.*[!@#$%^&*()\\-_=+{};:,<.>]).+$";
        return passwordUser.matches(regex); // Devuelve true si cumple con la expresión regular, false si no
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        userNameRegister = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        passwordUserRegister = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        passwordUserRegisterConfirm = new javax.swing.JPasswordField();
        registerBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        showPassword = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/imgdoctor2.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 330, 500));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 153, 255));
        jLabel2.setText("REGISTRARSE");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Nombre de usuario");

        userNameRegister.setBackground(new java.awt.Color(255, 255, 255));
        userNameRegister.setForeground(new java.awt.Color(204, 204, 204));
        userNameRegister.setText("Ingresa tu nombre de usuario");
        userNameRegister.setToolTipText("");
        userNameRegister.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        userNameRegister.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                userNameRegisterMousePressed(evt);
            }
        });
        userNameRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameRegisterActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Nueva contraseña");

        passwordUserRegister.setBackground(new java.awt.Color(255, 255, 255));
        passwordUserRegister.setText("*************");
        passwordUserRegister.setToolTipText("");
        passwordUserRegister.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        passwordUserRegister.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                passwordUserRegisterMousePressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Confirmar nueva contraseña");

        passwordUserRegisterConfirm.setBackground(new java.awt.Color(255, 255, 255));
        passwordUserRegisterConfirm.setText("*************");
        passwordUserRegisterConfirm.setToolTipText("");
        passwordUserRegisterConfirm.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        passwordUserRegisterConfirm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                passwordUserRegisterConfirmMousePressed(evt);
            }
        });

        registerBtn.setBackground(new java.awt.Color(51, 153, 255));
        registerBtn.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        registerBtn.setForeground(new java.awt.Color(255, 255, 255));
        registerBtn.setText("REGISTRARSE");
        registerBtn.setBorder(null);
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(204, 204, 204));
        jLabel6.setText("¿Tienes una cuenta existente? Ingresa con ella");

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(51, 153, 255));
        jButton2.setText("INICIAR SESION");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 255)));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        showPassword.setBackground(new java.awt.Color(255, 255, 255));
        showPassword.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        showPassword.setForeground(new java.awt.Color(0, 0, 0));
        showPassword.setText("Mostrar contraseña");
        showPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(101, 101, 101))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showPassword)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel5)
                        .addComponent(jLabel4)
                        .addComponent(jLabel3)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(registerBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(passwordUserRegisterConfirm)
                        .addComponent(passwordUserRegister)
                        .addComponent(userNameRegister)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userNameRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordUserRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordUserRegisterConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showPassword)
                .addGap(9, 9, 9)
                .addComponent(registerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 0, 470, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 815, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userNameRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameRegisterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameRegisterActionPerformed

    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
        String userName = userNameRegister.getText(); // // Obtiene el nombre de usuario ingresado en el campo correspondiente
        String passwordUser = new String(passwordUserRegister.getText()); // // Obtiene la contraseña ingresada en el campo correspondiente y la convierte en una cadena de caracteres
        String passwordUserConfirm = new String(passwordUserRegisterConfirm.getText()); // // Obtiene la confirmación de contraseña ingresada y la convierte en una cadena de caracteres
        boolean userRegister = false; // // Variable para indicar si el registro de usuario fue exitoso

        // Verifica si algún campo está vacío o tiene el texto predeterminado
        if (userName.isEmpty() || passwordUser.isEmpty() || passwordUserConfirm.isEmpty()
                || userName.equals("ingresa tu nombre de usuario") || passwordUser.equals("*************")
                || passwordUserConfirm.equals("*************")) {
            // Muestra un mensaje de error si algún campo está vacío o tiene el texto predeterminado
            JOptionPane.showMessageDialog(null, "No puede haber un campo vacío.");
            return; // Termina la ejecución del método si se encontró algún campo vacío
        }

        // Verifica si el nombre de usuario contiene espacios
        if (userName.contains(" ")) {
            // Muestra un mensaje de error si el nombre de usuario contiene espacios
            JOptionPane.showMessageDialog(null, "El nombre de usuario no puede contener espacios.");
            // Restablece los campos de nombre de usuario y contraseña a sus valores predeterminados
            userNameRegister.setText("Ingresa tu nombre de usuario");
            passwordUserRegisterConfirm.setText("*************");
            passwordUserRegister.setText("*************");
            return; // Termina la ejecución del método si se encontraron espacios en el nombre de usuario
        }
        
        // Verifica si la contraseña no cumple con los criterios de validación
        if (!validarPassword(passwordUser)) {
            // Muestra un mensaje de error si la contraseña no cumple con los criterios
            JOptionPane.showMessageDialog(null, "La contraseña debe contener al menos una letra, una mayúscula y un carácter especial.");
            return; // Termina la ejecución del método si la contraseña no es válida
        }

        // Verifica si el nombre de usuario no cumple con los criterios de validación
        if (!validarUserName(userName)) {
            // Muestra un mensaje de error si el nombre de usuario no cumple con los criterios
            JOptionPane.showMessageDialog(null, "El nombre de usuario debe contener al menos una letra, una mayúscula y un carácter especial.");
            return; // Termina la ejecución del método si el nombre de usuario no es válido
        }

        // Verifica si la longitud de la contraseña es menor a 8 caracteres
        if (passwordUser.length() < 8) {
            // Muestra un mensaje de error si la contraseña es demasiado corta
            JOptionPane.showMessageDialog(null, "La contraseña debe tener al menos 8 caracteres.");
            return; // Termina la ejecución del método si la contraseña no cumple con la longitud mínima
        }

        // Verifica si el nombre de usuario ingresado ya existe en la base de datos
        for (int i = 0; i < userDatabase.usercount; i++) {
            if (userDatabase.usernames.get(i).equals(userName)) {
                // Cambia el valor de userRegister como true si encuentra una coincidencia
                userRegister = true;
                break; // Sale del bucle una vez que encuentra la coincidencia
            }
        }

        if (userRegister) {
            // Si el usuario ya está registrado, muestra un mensaje de error
            JOptionPane.showMessageDialog(null, "Usuario ya existente. Utilice otro nombre de usuario");
        } else {
            if (passwordUserConfirm.equals(passwordUser)) { // Si las contraseñas coinciden, procede con el registro del usuario
                // Registro exitoso: añade el usuario a la base de datos y guarda los datos
                userDatabase.usernames.add(userName); // Agrega el nombre de usuario a la lista en la base de datos
                userDatabase.passwords.add(passwordUser); // Agrega la contraseña a la lista en la base de datos
                userDatabase.usercount++; // Incrementa el contador de usuarios a la base de datos
                userDatabase.saveUsers(); // Guarda los usuarios en el archivo
                
                // Muestra un mensaje de éxito y abre la ventana de inicio de sesión
                JOptionPane.showMessageDialog(null, "Usuario registrado exitosamente");
                Login loginFrame = new Login(userDatabase);
                loginFrame.setVisible(true);
                loginFrame.setLocationRelativeTo(null);
                this.dispose(); // Cierra la ventana actual de registro
            } else {
                // Si las contraseñas no coinciden, muestra un mensaje de error y reinicia los campos de texto
                JOptionPane.showMessageDialog(null, "Usuario y/o contraseña incorrecta. Vuelta a intentar");
                userNameRegister.setText("Ingresa tu nombre de usuario");
                passwordUserRegisterConfirm.setText("*************");
                passwordUserRegister.setText("*************");
            }
        }

    }//GEN-LAST:event_registerBtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Login loginFrame = new Login(userDatabase);
        loginFrame.setVisible(true);
        loginFrame.setLocationRelativeTo(null);

        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void userNameRegisterMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userNameRegisterMousePressed
        if (userNameRegister.getText().equals("Ingresa tu nombre de usuario")) {
            userNameRegister.setText("");
            userNameRegister.setForeground(Color.black);
        }

        if (String.valueOf(passwordUserRegister.getPassword()).isEmpty()) {
            passwordUserRegister.setText("*************");
            passwordUserRegister.setForeground(Color.gray);
        }

        if (String.valueOf(passwordUserRegisterConfirm.getPassword()).isEmpty()) {
            passwordUserRegisterConfirm.setText("*************");
            passwordUserRegisterConfirm.setForeground(Color.gray);
        }

    }//GEN-LAST:event_userNameRegisterMousePressed

    private void passwordUserRegisterMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordUserRegisterMousePressed
        if (String.valueOf(passwordUserRegister.getPassword()).equals("*************")) {
            passwordUserRegister.setText("");
            passwordUserRegister.setForeground(Color.black);
        }

        if (userNameRegister.getText().isEmpty()) {
            userNameRegister.setText("Ingresa tu nombre de usuario");
            userNameRegister.setForeground(Color.gray);
        }

        if (String.valueOf(passwordUserRegisterConfirm.getPassword()).isEmpty()) {
            passwordUserRegisterConfirm.setText("*************");
            passwordUserRegisterConfirm.setForeground(Color.gray);
        }

    }//GEN-LAST:event_passwordUserRegisterMousePressed

    private void passwordUserRegisterConfirmMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordUserRegisterConfirmMousePressed
        if (String.valueOf(passwordUserRegisterConfirm.getPassword()).equals("*************")) {
            passwordUserRegisterConfirm.setText("");
            passwordUserRegisterConfirm.setForeground(Color.black);
        }

        if (String.valueOf(passwordUserRegister.getPassword()).isEmpty()) {
            passwordUserRegister.setText("*************");
            passwordUserRegister.setForeground(Color.gray);
        }

        if (userNameRegister.getText().isEmpty()) {
            userNameRegister.setText("Ingresa tu nombre de usuario");
            userNameRegister.setForeground(Color.gray);
        }
    }//GEN-LAST:event_passwordUserRegisterConfirmMousePressed

    private void showPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPasswordActionPerformed
        if (showPassword.isSelected()) { // Si la opción de mostrar contraseña está seleccionada, muestra los caracteres de la contraseña
            passwordUserRegister.setEchoChar((char) 0); // Muestra los caracteres de la contraseña
            passwordUserRegisterConfirm.setEchoChar((char) 0); // Muestra los caracteres de la confirmación de contraseña
            
            if (passwordUserRegisterConfirm.equals("*************") || passwordUserRegister.equals("*************")) {
                passwordUserRegister.setText(""); // Limpia el campo de contraseña
                passwordUserRegisterConfirm.setText(""); // Limpia el campo de confirmación de contraseña
            }
        } else { // Si la opción de mostrar contraseña no está seleccionada, oculta los caracteres de la contraseña
            passwordUserRegister.setEchoChar('*'); // Oculta los caracteres de la contraseña
            passwordUserRegisterConfirm.setEchoChar('*'); // Oculta los caracteres de la confirmación de contraseña
        }
    }//GEN-LAST:event_showPasswordActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField passwordUserRegister;
    private javax.swing.JPasswordField passwordUserRegisterConfirm;
    private javax.swing.JButton registerBtn;
    private javax.swing.JCheckBox showPassword;
    private javax.swing.JTextField userNameRegister;
    // End of variables declaration//GEN-END:variables
}
